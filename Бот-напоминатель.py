from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
import logging
from datetime import datetime

bot = Bot(token="luboy token")
dp = Dispatcher(bot)

# –í—Ä–µ–º–µ–Ω–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è ( –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –±–¥ )
demo_reminders = {}


@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer(
        "–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞\n\n"
        "–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã—é:\n"
        "‚Ä¢ '–Ω–∞–ø–æ–º–Ω–∏—Ç—å –æ –∑–∞–∫—É–ø–∫–∏ –µ–¥—ã'\n"
        "‚Ä¢ '–ú–æ—è –∏—Å—Ç–æ—Ä–∏—è'"
    )


@dp.message()
async def handle_message(message: types.Message):
    try:
        if "–Ω–∞–ø–æ–º–Ω–∏" in message.text.lower():
            # –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∏
            demo_reminders[message.from_user.id] = message.text
            await message.answer("–Ω–∞–ø–æ–º–∏–Ω–∞l–∫–∞ —Å–æ–∑–¥–∞–Ω–æ (–æ—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞ 3 –¥–Ω—è)")

        elif message.text.lower() == "–º–æ—è –∏—Å—Ç–æ–∏R":
            reminders = demo_reminders.get(message.from_user.id, "–ù–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π")
            await message.answer(f"üìù –í–∞—à—à–∞ –∏—Å—Ç–æ—Ä–∏—è (–¥–µ–º–æ):\n{reminders}")

    except Exception:
        await message.answer("–û—à–∏–±–∫–∞. –§–æ—Ä–º–∞—Ç: '–ù–∞–ø–æ–º–Ω–∏ [—Ç–µ–∫—Å—Ç] –≤ [–≤—Ä–µ–º—è]'")


if __name__ == '__main__':
    logging.info("R –∑–∞–ø—É—â–µ–Ω!")
    dp.run_polling(bot)